{"version":3,"sources":["components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/Contacts/ContactList.js","App.js","reportWebVitals.js","index.js"],"names":["ContactForm","onSubmit","this","props","handleSubmit","type","name","pattern","title","required","onChange","handleChange","value","state","number","Component","Filter","ContactList","contacts","filter","cont","toLowerCase","includes","map","contact","id","onClick","onDeleteBtn","App","e","currentTarget","setState","preventDefault","find","alert","uuidv4","prevState","nativeEvent","path","className","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.940d62d3.chunk.js","sourcesContent":["import { Component } from 'react/cjs/react.production.min';\r\n\r\nclass ContactForm extends Component {\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit}>\r\n        <label>\r\n          Name <br />\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={this.props.handleChange}\r\n            value={this.props.state.name}\r\n          />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Number <br />\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={this.props.handleChange}\r\n            value={this.props.state.number}\r\n          />\r\n        </label>\r\n        <br />\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import { Component } from 'react/cjs/react.production.min';\r\n\r\nclass Filter extends Component {\r\n  render() {\r\n    return (\r\n      <label>\r\n        Find contact by name\r\n        <br />\r\n        <input type=\"text\" name=\"filter\" onChange={this.props.handleChange} />\r\n      </label>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Filter;\r\n","import { Component } from 'react/cjs/react.production.min';\r\n\r\nclass ContactList extends Component {\r\n  render() {\r\n    return (\r\n      <ul>\r\n        {this.props.contacts\r\n          .filter(cont =>\r\n            cont.name.toLowerCase().includes(this.props.filter.toLowerCase()),\r\n          )\r\n          .map(contact => (\r\n            <li key={contact.id} id={contact.id}>\r\n              {contact.name}: {contact.number}\r\n              <button onClick={this.props.onDeleteBtn}>delete</button>\r\n            </li>\r\n          ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactList;\r\n","import React, { Component } from 'react';\n\nimport './App.css';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/Contacts/ContactList';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    name: '',\n    number: '',\n    filter: '',\n  };\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    if (\n      this.state.contacts.find(\n        contact => contact.name.toLowerCase() === this.state.name.toLowerCase(),\n      )\n    ) {\n      return alert(`${this.state.name} is already in contacts.`);\n    }\n\n    this.setState({\n      contacts: [\n        {\n          name: this.state.name,\n          number: this.state.number,\n          id: uuidv4(),\n        },\n        ...this.state.contacts,\n      ],\n      name: '',\n      number: '',\n    });\n  };\n\n  onDeleteBtn = e => {\n    this.setState(prevState => {\n      return {\n        contacts: [\n          ...prevState.contacts.filter(\n            cont => cont.id !== e.nativeEvent.path[1].id,\n          ),\n        ],\n      };\n    });\n  };\n  // onFilter = () => {};\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Phonebook</h1>\n        <ContactForm\n          state={this.state}\n          handleSubmit={this.handleSubmit}\n          handleChange={this.handleChange}\n        />\n\n        {this.state.contacts.length > 0 && (\n          <>\n            <h2>Contacts</h2>\n            <Filter handleChange={this.handleChange} />\n            <ContactList\n              contacts={this.state.contacts}\n              filter={this.state.filter}\n              onDeleteBtn={this.onDeleteBtn}\n            />\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}